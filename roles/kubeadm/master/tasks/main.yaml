- name: Check for existing kube-config
  stat: 
    path: /root/.kube/config
  register: p

- name: initalize cluster if kubeconfig is missing
  block: 
  - name: Initalize cluster
    shell:
      cmd: "kubeadm init --pod-network-cidr={{ pod_cidr }} --service-cidr={{ service_cidr }}"

  - name: Create kube config dir
    file:
      path: "/root/.kube"
      state: directory
      mode: '0755'

  - name: copy admin conf to /root/.kube/config
    copy:
      src: /etc/kubernetes/admin.conf
      dest: /root/.kube/config
      owner: root
      group: root
      remote_src: yes
      mode: '0400'
  when: p.stat.exists == false

- name: Create flannel tmp dir
  file:
    path: "/tmp/flannel"
    state: directory
    mode: '0755'

- name: copy flannel configs to host
  template:
    src: "../templates/flannel-{{ item }}.j2"
    dest: "/tmp/flannel/{{ item }}"
    owner: root
    group: root
    mode: '0644'
  loop:
    - cm.yaml
    - cr.yaml
    - crb.yaml
    - sa.yaml
    - ds-arm.yaml

# - name: Create a Service object by reading the definition from a file
#   k8s:
#     kubeconfig: /root/.kube/config
#     state: present
#     src: "/tmp/flannel/{{ item }}"
#   loop:
#     - cm.yaml
#     - cr.yaml
#     - crb.yaml
#     - sa.yaml
#     - ds-arm.yaml

- name: deploy flannel components
  shell:
    cmd: "kubectl apply -f /tmp/flannel/"
